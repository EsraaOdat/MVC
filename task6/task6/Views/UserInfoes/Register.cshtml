@model task6.Models.UserInfo

@{
    ViewBag.Title = "Register";
}

<section class="vh-100 bg-image"
         style="background-image: url('https://mdbcdn.b-cdn.net/img/Photos/new-templates/search-box/img4.webp');">
    <div class="mask d-flex align-items-center h-100 gradient-custom-3">
        <div class="container h-100">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-12 col-md-9 col-lg-7 col-xl-6">
                    <div class="card" style="border-radius: 15px;">
                        <div class="card-body p-5">
                            <h2 class="text-uppercase text-center mb-5">Create an account</h2>

                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()

                                <div class="form-outline mb-4">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-outline mb-4">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-outline mb-4">
                                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>

                                <div class="d-flex justify-content-center">
                                    <input type="submit" value="Register" class="btn btn-success btn-block btn-lg gradient-custom-4 text-body" />
                                </div>

                                <p class="text-center text-muted mt-5 mb-0">Have already an account? <a href="@Url.Action("Login", "Account")" class="fw-bold text-body"><u>Login here</u></a></p>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
